#!/bin/bash
hosts="none"
if [ $# -gt 0 ] && [[ $1 =~ ".*help" ]] ; then
    cat << \EOF
./runaderegistry -l <addr> : specify local machine IP
		 -r <addr> : specify additional registry IP
		 -f <file> : component config file to use
		 -k <file> : hosts file to use
		 -cp <dir> : specify java classpath
		 -mx.*
		 -D.*
		 -XX.*	   : java VM arguments

The script will try to guess values for the local IP address and registry
IP address (if not provided).

Examples:

./runaderegistry
    start the registry alone, with the default hosts file and the best guess
    IP address (then start components using runadecomponent)

./runaderegistry -k NLP.hosts -f cbot-824-stage.config
    start the registry with the best guess IP address using the hosts file
    "NLP.hosts" and spawn the components as specified in the config file
    "cbot-824-stage.config"

EOF
    exit
fi
if [ -f ADEENV ] ; then
    . ./ADEENV
else
    echo
    echo "ERROR STARTING REGISTRY"
    echo
    echo "You need to compile the ADE system first (e.g., ./mkade small)."
    echo
    echo "Exiting."
    exit
fi
if [ ! -e $JAVA ] ; then
    echo
    echo "ERROR STARTING REGISTRY"
    echo
    echo "$JAVA not found."
    echo
    echo "Please edit ./ADEENV (or delete it so it can be regenerated)"
    echo
    echo "Exiting."
    exit
fi
if [ ! -e .runaderegistry ] ; then
    cat << \EOF
This is runaderegistry, a convenience script for starting an ADE registry
from the command line, provided as an alternative to the officially
supported method of specifying the entire java command yourself.  It will
try to fill in required information when possible, but it is NOT GUARANTEED
to work for any given environment or component configuration.  Note that this
is particularly true for non-Linux environments, such as Windows, where it
is all but certain to fail.  However, the script itself should be a good
resource for figuring out what kinds of information you'll need to provide
when starting your registry yourself.

The script is designed to accept and appropriately pass on command-line
arguments, so you are free to override the defaults it would normally
use.  Note that, unlike when you call java directly, all arguments,
including VM directives, should be given AFTER the class name.  The script
tries to make sure they're passed to java correctly--but NO GUARANTEES.

Again, this script is intended to make starting a registry easier than it
would otherwise be; its assumptions and guesses are appropriate for many
environments, but not all.  You are free to construct your own command line
to start your JVM if the function of this script does not appeal to you.

Please press <ENTER> to acknowledge this message and continue (this message
should not be repeated after the first run in a given directory): 
EOF
    read junk
    touch .runaderegistry
fi
# default build target is "build"; define alternative target in ADEENV
# (e.g., TARGET="." to compile in place)
: ${TARGET:="build"}
if [ ! -d $TARGET ] ; then
    mkdir $TARGET
fi
export TARGET

#cp=core/ADEcore.jar:$TARGET:jars/prefuse.jar:jars/commons-io-2.0.1.jar:.:jars/visionJNI.jar:jars/SapaReplan.jar:jars/vecmath.jar:$UCP
cp=.:$TARGET:jars/prefuse.jar:jars/commons-io-2.0.1.jar:.:jars/visionJNI.jar:jars/SapaReplan.jar:jars/vecmath.jar:$UCP
#adegrid analyzer gui requirements
cp=$cp:com/grid/analyzer/cobra.jar:com/grid/analyzer/js.jar
#export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:../vision/trunk/JNIversion:../vision/trunk/JNIversion/imageProcessor/vlfeat/bin/glx:../vision/trunk/JNIversion/imageProcessor/vlfeat/bin/a64:/usr/local/lib:../vision/trunk/JNIversion/AM:../vision/trunk/JNIversion/capture/MDS:com/wheelchair/JNI:com/mds:com/lsm:com/nsim/speechrec

#classpaths for action transfer -- EAK: lots of duplicates, clean this up!
cp=$cp:jars/vecmath.jar:jars/lwjgl.jar:jars/lwjgl_util.jar:jars/ode4j.jar:jars/ode4j-cpp.jar:jars/jreality/antlr.jar:jars/jreality/beans.jar:jars/jreality/bsh.jar:jars/jreality/colorpicker.jar:jars/jreality/gluegen-rt.jar:jars/jreality/iText-2.1.3.jar:jars/jreality/janino.jar:jars/jreality/jogl.jar:jars/jreality/jReality.jar:jars/jreality/jrworkspace.jar:jars/jreality/jterm.jar:jars/jreality/netutil.jar:jars/jreality/sunflow.jar:jars/jreality/vrData.jar:jars/jreality/xpp3.jar:jars/jreality/xstream.jar:jars/commons-math3-3.0.jar:jars/jfreechart-1.0.14.jar:jars/jfreechart-1.0.13.jar:jars/jcommon-1.0.16.jar:jars/visionJNI.jar:jars/commons-logging-1.1.2.jar:jars/log4j-api-2.0-beta5.jar:jars/log4j-core-2.0-beta5.jar:jars/log4j-jcl-2.0-beta5.jar
cp=$cp:jars/MinkParser.jar:jars/ode4j.jar:jars/lwjgl.jar:jars/lwjgl_util.jar:jars/jreality/antlr.jar:jars/jreality/beans.jar:jars/jreality/bsh.jar:jars/jreality/colorpicker.jar:jars/jreality/gluegen-rt.jar:jars/jreality/iText-2.1.3.jar:jars/jreality/janino.jar:jars/jreality/jogl.jar:jars/jreality/jReality.jar:jars/jreality/jrworkspace.jar:jars/jreality/jterm.jar:jars/jreality/netutil.jar:jars/jreality/sunflow.jar:jars/jreality/vrData.jar:jars/jreality/xpp3.jar:jars/jreality/xstream.jar:jars/commons-math3-3.0.jar:jars/vecmath.jar:jars/jfreechart-1.0.14.jar:jars/jcommon-1.0.16.jar:.:/usr/lib64/pl-jpl/jpl.jar:/usr/local/lib/swipl-5.10.5/lib/jpl.jar:/usr/lib64/swipl-jpl/jpl.jar:/usr/local/lib/swipl-6.2.6/lib/jpl.jar:/usr/local/lib/swipl-6.0.2/lib/jpl.jar:/usr/local/lib/swipl-6.2.4/lib/jpl.jar

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:../vision/native/build/capture/swig:../vision/trunk/JNIversion/imageProcessor/vlfeat/bin/glx:../vision/trunk/JNIversion/imageProcessor/vlfeat/bin/a64:/usr/local/lib:../vision/trunk/JNIversion/AM:../vision/trunk/JNIversion/capture/MDS:com/wheelchair/JNI:com/mds:com/lsm:com/nsim/speechrec
# treat the local address specially, since we need to make sure it gets set
addr=
largs=
# also need a known hosts file
hosts=
mx="-mx512m"
while [ $# -gt 0 ] ; do
    arg=$1
    if [ $arg = "-l" ] ; then
        shift
        addr=$1
        largs="-l "$1
        # following the convention of ADEComponentImpl for port and name
        if [ ! -z $2 ] && [[ $2 != -* ]] ; then
            shift
            largs=$largs" "$1
            if [ ! -z $2 ] && [[ $2 != -* ]] ; then
                shift
                largs=$largs" "$1
            fi
        fi
    elif [ $arg = "-k" ] ; then
        shift
        hosts=$1
    elif [[ $arg =~ "-XX" ]] ; then
        # Special case to match garbage collection argument
        preargs=$preargs$arg" "
    elif [[ $arg =~ "-Xss" ]] ; then
        # Special case to set thread stack size
        preargs=$preargs$arg" "
    elif [[ $arg =~ "-mx" ]] ; then
        # Special case to match heap size argument
        mx=$arg
    elif [[ $arg =~ "-D" ]] ; then
        preargs=$preargs$arg" "
    elif [ $arg = "-cp" ] ; then
        shift
        cp=$cp:$1
    else
        args=$args" "$1
    fi
    shift
done
preargs=$preargs$mx" "
if [ -z $addr ] ; then
#    addr=127.0.0.1
     addr=localhost
    largs="-l $addr"
fi
preargs=$preargs"-Dcomponent=ade.ADERegistry -Djava.net.preferIPv4Stack -Djava.rmi.server.hostname="$addr" -cp "$cp
if [ -z $hosts ] ; then
    # build one
    me=`whoami`
    adehome=`pwd`"/"
    echo "# auto-generated hosts file" > tmp/$me.hosts
    echo "STARTHOST" >> tmp/$me.hosts
    echo "ip $addr" >> tmp/$me.hosts
    if [[ $(uname) == "Darwin" ]] ; then
        echo "os Mac OS X" >> tmp/$me.hosts
    else
        echo "os Linux" >> tmp/$me.hosts
    fi
    echo "javadir $JDIR" >> tmp/$me.hosts
    echo "adehome $adehome" >> tmp/$me.hosts
    echo "sshlogin $me" >> tmp/$me.hosts
    echo "ENDHOST" >> tmp/$me.hosts
    if [[ $addr != 127.0.0.1 ]] ; then
        echo "#" >> tmp/$me.hosts
        echo "STARTHOST" >> tmp/$me.hosts
        echo "ip 127.0.0.1" >> tmp/$me.hosts
        echo "os Linux" >> tmp/$me.hosts
        echo "javadir $JDIR" >> tmp/$me.hosts
        echo "adehome $adehome" >> tmp/$me.hosts
        echo "sshlogin $me" >> tmp/$me.hosts
        echo "ENDHOST" >> tmp/$me.hosts
    fi
    hosts=tmp/$me.hosts
fi
cmd=$JAVA" "$preargs" ade.ADEComponentImpl "$largs" -k "$hosts" "$args
echo $cmd
$cmd
