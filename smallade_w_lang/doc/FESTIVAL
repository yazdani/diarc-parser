To use the "adeplay" utility from the airolab's subversion repository (this
is the default), the file "/tmp/fdone" MUST EXIST prior to running or the
"isSpeaking()" method will always return true, as it is used to calculate
when a festival utterance will complete.

The default command used by ADE to start festival is "festival_server", which
assumes the command will work from the command line in the ADEHOME directory.
Not all systems have that script, however. You can pass a different command
at startup with the -exe flag, like so: 

java com/festival/FestivalServerImpl -exe festival \
        --libdir <festival_library_directory> \
        --server <festival_initialization_script> \
        [other_ADE_switches]

The following are valid settings that have been used and may be suitable for
a particular machine:

Using the airolab festival repository:
    <festival_library_directory>      : <festival-repository-dir>/lib
    <festival_initialization_script>  : <festival-repository-dir>/lib/init.scm

A personal Debian computer:
    <festival_library_directory>      : /usr/share/festival
    <festival_initialization_script>  : /usr/share/festival/init.scm

I've found that Festival often disallows access by default; check the
"server_deny_list", "server_access_list", and "server_passwd" variables
in the "festival.scm" file (probably in the <festival_library_directory>).
Modifying one of them may solve access problems.

To play the sample voices ("There are many trees in the forest"), go to the
directory for the festival repository (typically ../festival), start
festival, and  type '(load "evalhri.scm")' at the prompt.  The script waits
for input before each piece is played, so give it some junk.

In order to combat the choppy playback issue, the playback rate is set to 16000
in ~/.asoundrc.  This is the rate generated by festival, so there's no loss of
quality, but it's worth keeping in mind for the future.

For some reason, aplay does not honor device locks acquired by other
instantiations of itself.  This leads to overlapping spoken text in some cases.
I encapsulated the call to aplay in an flock on the file /tmp/adeplay.log.  If
for some reason we stop logging to that file, this is going to have to be
changed.
